// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentCenter.DataAccessLayer;

namespace PaymentCenter.DataAccessLayer.Migrations
{
    [DbContext(typeof(PaymentCenterDbContext))]
    [Migration("20230426091855_Update1")]
    partial class Update1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaymentCenter.Entities.BoxOfficeAttendant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoxOfficeAttendantAge")
                        .HasColumnType("int");

                    b.Property<string>("BoxOfficeAttendantEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BoxOfficeAttendantIdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("BoxOfficeAttendantName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("BoxOfficeAttendantPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("BoxOfficeAttendantSurname")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("ID");

                    b.ToTable("BoxOfficeAttendants");
                });

            modelBuilder.Entity("PaymentCenter.Entities.Institution", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("InstitutionTypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("InstitutionTypeID");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("PaymentCenter.Entities.InstitutionSubscriber", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("DepositAmount")
                        .HasColumnType("real");

                    b.Property<int>("InstitutionID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SubscriberID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("InstitutionID");

                    b.HasIndex("SubscriberID");

                    b.ToTable("InstitutionSubscribers");
                });

            modelBuilder.Entity("PaymentCenter.Entities.InstitutionType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InstitutionTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("InstitutionTypes");
                });

            modelBuilder.Entity("PaymentCenter.Entities.Invoice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoxOfficeAttendantID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstitutionSubscriberID")
                        .HasColumnType("int");

                    b.Property<float>("InvoiceAmount")
                        .HasColumnType("real");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BoxOfficeAttendantID");

                    b.HasIndex("InstitutionSubscriberID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("PaymentCenter.Entities.Subscriber", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SubscriberAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SubscriberAge")
                        .HasColumnType("int");

                    b.Property<string>("SubscriberEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubscriberIdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SubscriberName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("SubscriberPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SubscriberSurname")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("ID");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("PaymentCenter.Entities.Institution", b =>
                {
                    b.HasOne("PaymentCenter.Entities.InstitutionType", "InstitutionType")
                        .WithMany()
                        .HasForeignKey("InstitutionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstitutionType");
                });

            modelBuilder.Entity("PaymentCenter.Entities.InstitutionSubscriber", b =>
                {
                    b.HasOne("PaymentCenter.Entities.Institution", "Institution")
                        .WithMany("InstitutionSubscribers")
                        .HasForeignKey("InstitutionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaymentCenter.Entities.Subscriber", "Subscriber")
                        .WithMany("InstitutionSubscribers")
                        .HasForeignKey("SubscriberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("PaymentCenter.Entities.Invoice", b =>
                {
                    b.HasOne("PaymentCenter.Entities.BoxOfficeAttendant", "BoxOfficeAttendant")
                        .WithMany()
                        .HasForeignKey("BoxOfficeAttendantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaymentCenter.Entities.InstitutionSubscriber", "InstitutionSubscriber")
                        .WithMany()
                        .HasForeignKey("InstitutionSubscriberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoxOfficeAttendant");

                    b.Navigation("InstitutionSubscriber");
                });

            modelBuilder.Entity("PaymentCenter.Entities.Institution", b =>
                {
                    b.Navigation("InstitutionSubscribers");
                });

            modelBuilder.Entity("PaymentCenter.Entities.Subscriber", b =>
                {
                    b.Navigation("InstitutionSubscribers");
                });
#pragma warning restore 612, 618
        }
    }
}
